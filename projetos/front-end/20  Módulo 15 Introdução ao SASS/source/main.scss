@use 'config/reset';
@use 'config/variaveis';
@use 'sass:math';

@mixin elementoForm($margin: 16px) {
    padding: 8px;
    display: block;
    width: 100%;
    margin-bottom: $margin;
}

@function pixelParaEm($alvoEmPixel, $contextoEmPixel: 16px) {
    @return math.div($alvoEmPixel, $contextoEmPixel) + em;
}

body {
    background-color: variaveis.$corFundo;
}

.conta
iner {
    max-width: 1024px;
    width: 100%;
    margin: 0 auto;
}

header {
    padding: 16px 0;
    background-color: variaveis.$corPrincipal;
    text-align: center;
    color: variaveis.$corTexto2;
}

.form-container {
    height: calc(100vh - 70px);
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    max-width: 960px;

    h2 {
        font-size:  pixelParaEm(25px);
        text-align: center;

        &:hover {
            color: lighten(variaveis.$corSecundaria, 15%);
        }
    }

    label {
        cursor: pointer;
    }

    form {
        width: 100%;
        max-width: 360px;
        margin: 40px 0;

        input {
            @include elementoForm(80px);
            background-color: transparent;
            border: none;
            border-bottom: 2px solid variaveis.$corPrincipal;
        }
        
        button {
            @include elementoForm();
            background-color: variaveis.$corSecundaria;
            font-size: 18px;
            border: none;
            color: variaveis.$corTexto2;
            cursor: pointer;

            &:hover {
                background-color: darken(variaveis.$corSecundaria, 15%);
            }
        }
    }
}

@media screen and (max-width: #{variaveis.$mobile}) {
    .container {
        max-width: 80%;
    }
}

// conversao de em sem scss:
// medida alvo / medida atual do contexto
// medida alvo / 16px (font size tag body)
// ex 30 / 16 = 2em

